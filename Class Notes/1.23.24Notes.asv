%% relational and logical operators
a = 3
a == 3

a~=3 %~= means not

a == 2 & a < 4; % &: both have to be correct/true.
a> 0 & a<10 & a*a>8; % &: all and's have to be correct. 

a>100 | a<4; % |: Or operator. One has to be correct.  

%% Implementing logical operators w/ vectors:

b = [1:100];
b == 3;     % Gives a vector where the logical operator is tested per element. 1 where b=3 and 0 where b~=3.
b>50 & rem(b,2)==0

%% Find function 
find(b==3)  % find where b==3
find(b>30)  % find where b is greater than 30. 

a = (1:1:10)*2
find(a > 10, 1, 'first')    % find with 'first' tells us the first occurance of something. Can use this for signal low to high for example. 
find(a  < 10, 1, 'last')    % find with 'last' tells us the last occurance of something. Can use this for signal high to low for example.

% all function can be used to compute for all elements in a vector. 

%% What does this output?

mysteryVec = randn(1, 1000)>0.9;   % What does ">0.9" and ">2" mean again?
mysteryMat = randn(10, 1000)>2;    % Oh it's where the Vector/matrix is greater than 0.9 or 2

%% Matrices 
p1 = [1 2 3; 4 5 6]
p1(1:2, [1 3])      % Se